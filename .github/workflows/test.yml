name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Run import tests
      run: |
        python test_imports.py
    
    - name: Run linting
      run: |
        ruff check chronos_mcp
    
    - name: Check formatting
      run: |
        black --check chronos_mcp tests
    
    - name: Check cyclomatic complexity
      run: |
        # Run radon to check for overly complex functions (C rating or higher)
        # Ratings: A=1-5, B=6-10, C=11-20, D=21-30, E=31+
        echo "Checking cyclomatic complexity (threshold: C rating or higher)..."
        radon cc chronos_mcp --min=C --show-complexity || echo "::warning::Found functions with high complexity (C+ rating). Consider refactoring."

    - name: Run tests with coverage
      run: |
        # Target 75% coverage (aspirational - current: 77%)
        # Main gaps: bulk operations (40%), tools/events (44%), tools/calendars (51%)
        pytest --cov=chronos_mcp --cov-report=term-missing --cov-report=xml --cov-report=html --cov-fail-under=75 || echo "::warning::Coverage below 75% threshold"

    - name: Upload coverage reports
      if: matrix.python-version == '3.11'  # Only upload once, not for every Python version
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false  # Don't fail CI if upload fails