name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  id-token: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build distribution
      run: python -m build
    
    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog between this and previous tag
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" > CHANGELOG_CURRENT.md
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG_CURRENT.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body: |
          ## What's Changed
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          ```bash
          pip install chronos-mcp==${{ steps.changelog.outputs.VERSION }}
          ```
          
          ## Full Changelog
          https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^)...${{ steps.changelog.outputs.VERSION }}
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
    
    - name: Publish to PyPI
      if: "!contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')"
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        verify-metadata: true
        skip-existing: true
    
    - name: Publish to Test PyPI
      if: contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        verify-metadata: true
        skip-existing: true
    
    - name: Notify Discord
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Release ${{ steps.changelog.outputs.VERSION }} published successfully!"
        else
          echo "❌ Release ${{ steps.changelog.outputs.VERSION }} failed!"
        fi
        # Add Discord webhook notification here
